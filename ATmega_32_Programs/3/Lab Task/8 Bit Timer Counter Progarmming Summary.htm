<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8" />
<title>Timer/Counter Progarmming in AVR MicrocontrollersEmbeddedTutorials.com</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.embeddedtutorials.com/wp-content/themes/twentyten/style.css" />
<link rel="pingback" href="http://www.embeddedtutorials.com/xmlrpc.php" />

<!-- This site is optimized with the Yoast WordPress SEO plugin v1.3.4.4 - http://yoast.com/wordpress/seo/ -->
<link rel="canonical" href="http://www.embeddedtutorials.com/150/" />
<meta property='og:locale' content='en_US'/>
<meta property='og:title' content='Timer/Counter Progarmming in AVR Microcontrollers'/>
<meta property='og:url' content='http://www.embeddedtutorials.com/150/'/>
<meta property='og:site_name' content='EmbeddedTutorials.com'/>
<meta property='og:type' content='article'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/circuit-300x272.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image1.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image2.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image5.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image6.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.1.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.2.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.3.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.4.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.5.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image8.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image7.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Program.jpg'/>
<meta property='og:image' content='http://www.embeddedtutorials.com/wp-content/uploads/2012/12/circuit.jpg'/>
<!-- / Yoast WordPress SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="EmbeddedTutorials.com &raquo; Feed" href="http://www.embeddedtutorials.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="EmbeddedTutorials.com &raquo; Comments Feed" href="http://www.embeddedtutorials.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="EmbeddedTutorials.com &raquo; Timer/Counter Comments Feed" href="http://www.embeddedtutorials.com/150/feed/" />
<script type='text/javascript' src='http://www.embeddedtutorials.com/wp-includes/js/comment-reply.min.js?ver=3.5.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.embeddedtutorials.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.embeddedtutorials.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.5.1" />
<link rel='shortlink' href='http://www.embeddedtutorials.com/?p=150' />
</head>

<body class="single single-post postid-150 single-format-standard">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.embeddedtutorials.com/" title="EmbeddedTutorials.com" rel="home">EmbeddedTutorials.com</a>
					</span>
				</div>
				<div id="site-description">New Way to Learn Embedded Programming</div>

										<img src="http://www.embeddedtutorials.com/wp-content/uploads/2014/02/cropped-circuit.jpg" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-home" class="menu"><li id="menu-item-11" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11"><a href="http://embeddedtutorials.com">Home</a></li>
<li id="menu-item-453" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-ancestor current-menu-parent menu-item-453"><a href="http://www.embeddedtutorials.com/embedded/atmega-32">Atmega32</a>
<ul class="sub-menu">
	<li id="menu-item-342" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-342"><a href="http://www.embeddedtutorials.com/eeprom-programming-in-atmega32/">EEPROM</a></li>
	<li id="menu-item-145" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145"><a href="http://www.embeddedtutorials.com/io-port-programming/">IO Ports</a></li>
	<li id="menu-item-353" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-353"><a href="http://www.embeddedtutorials.com/lcd-interfacing-with-atmega32/">LCD</a></li>
	<li id="menu-item-173" class="menu-item menu-item-type-custom menu-item-object-custom current-menu-item menu-item-173"><a href="http://www.embeddedtutorials.com/150/">Timer/Counter</a></li>
	<li id="menu-item-135" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135"><a href="http://www.embeddedtutorials.com/adc-programing/">ADC</a></li>
	<li id="menu-item-62" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-62"><a href="http://www.embeddedtutorials.com/embedded/atmega-32/communication/">Communication</a>
	<ul class="sub-menu">
		<li id="menu-item-216" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-216"><a href="http://www.embeddedtutorials.com/209/">Communication Basic</a></li>
		<li id="menu-item-218" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-218"><a href="http://www.embeddedtutorials.com/rs232-basics/">RS232 Basics</a></li>
		<li id="menu-item-217" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-217"><a href="http://www.embeddedtutorials.com/atmega32-serial-port-registers/">USART</a></li>
		<li id="menu-item-206" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-206"><a href="http://www.embeddedtutorials.com/two-wire-interface/">I2c</a></li>
	</ul>
</li>
	<li id="menu-item-247" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-247"><a href="http://www.embeddedtutorials.com/interrupt/">Interrupt</a>
	<ul class="sub-menu">
		<li id="menu-item-267" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-267"><a href="http://www.embeddedtutorials.com/interrupt/">Interrupt Basics</a></li>
		<li id="menu-item-266" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-266"><a href="http://www.embeddedtutorials.com/external-interrupt/">External Interrupt</a></li>
	</ul>
</li>
</ul>
</li>
<li id="menu-item-454" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-454"><a href="http://www.embeddedtutorials.com/embedded/pic-18f458/">MICRO PIC</a>
<ul class="sub-menu">
	<li id="menu-item-311" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-311"><a href="http://www.embeddedtutorials.com/eeprom-programming-for-pic18f458-2/">EEPROM</a></li>
	<li id="menu-item-279" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-279"><a href="http://www.embeddedtutorials.com/io-ports/">IO PORTS</a></li>
	<li id="menu-item-326" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-326"><a href="http://www.embeddedtutorials.com/usart-programming-in-pic18f458/">USART</a></li>
</ul>
</li>
<li id="menu-item-455" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-455"><a href="http://www.embeddedtutorials.com/lpc2148-tutorials/">ARM</a>
<ul class="sub-menu">
	<li id="menu-item-384" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-384"><a href="http://www.embeddedtutorials.com/lpc2148-tutorials/">GPIO PORTS</a></li>
	<li id="menu-item-520" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-520"><a href="http://www.embeddedtutorials.com/lpc-i2c/">I2C</a></li>
	<li id="menu-item-541" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-541"><a href="http://www.embeddedtutorials.com/lpc-rtc/">Internal RTC</a></li>
	<li id="menu-item-580" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-580"><a href="http://www.embeddedtutorials.com/lpc21248timercounter">Timer/Counter</a></li>
	<li id="menu-item-592" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-592"><a href="http://www.embeddedtutorials.com/lpc2148externalinterrupt/">External Interrupt</a></li>
</ul>
</li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.embeddedtutorials.com/io-port-programming/" rel="prev"><span class="meta-nav">&larr;</span> I/O Port Programming in ATMega32</a></div>
					<div class="nav-next"><a href="http://www.embeddedtutorials.com/two-wire-interface/" rel="next">Two Wire Interface <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-150" class="post-150 post type-post status-publish format-standard hentry category-atmega-32 tag-countdown-timer-in-avr-microcontrollers tag-counters-in-avr-microcontrollers tag-counters-in-microcontrollers tag-timercounter-progarmming-in-avr-microcontrollers tag-timers-in-avr-microcontrollers tag-timers-in-microcontrollers">
					<h1 class="entry-title">Timer/Counter</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.embeddedtutorials.com/150/" title="11:34 am" rel="bookmark"><span class="entry-date">December 3, 2012</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.embeddedtutorials.com/author/" title="View all posts by "></a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<p align="center"><strong>Timer/Counter</strong></p>
<p>In AVR ATMega32 there are 3 timers ,in that two 8bit timers(Timer0 &amp; Timer 2)and one 16 bit timer(Timer1).By learning the timers of ATMega 32 we can use timers in any AVR controllers. In AVR the Timer/Counter registers are</p>
<ul>
<li>TCNTn     Timer counter register n</li>
<li>TCCRn    Timer Counter Control Register</li>
<li>OCRn       Output Compare Register</li>
<li>TIMSK      Timer Counter Interrupt Mask Register</li>
<li>TIFR         Timer Counter Interrupt Flag Register</li>
</ul>
<p>The AVR Timer/Counter register are used for</p>
<ul>
<li>Generating  time delays</li>
<li>Counting the operation</li>
<li>Pulse Width modulation</li>
<li>Waveform Generation</li>
</ul>
<p><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image1.jpg"><img class="aligncenter size-full wp-image-151" title="Image1" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image1.jpg" width="1112" height="285" /></a></p>
<p>If we want to generate time delay we connect oscillator to the timer/counter register. For each tick in the oscillator the counter register counts one, so the register holds the number of ticks, since we know the oscillator speed we can calculate the total time.  To count an external event, the source of the event will be connect the clock pin of the timer/counter register In this section we are going to learn how to generate time delay by using timer/counter register   In 8 bit timer the upper most value is 0XFF,the counter register increase from its content up to 0XFF  linearly and the rolls back to zero cause the overflow. So if we want to generate 100 micro second of time delay in a micro-controller who’s operating at 1 MHZ we have to load the counter register(TCNTN)with 0X9C(156). Because for each tick it takes 1 micro seconds, so from 0X9C the hundredth count will overflow <strong>                                      Timer/Counter 0 Block Diagram</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image2.jpg"><img class="aligncenter size-full wp-image-152" title="Image2" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image2.jpg" width="632" height="440" /></a></p>
<p><strong> </strong> <strong>Register Descriptions:</strong> <strong>Timer counter register 0(TCNT0)</strong> <strong>            </strong></p>
<p>This register is used to hold counting values .It is a 8 bit register and it can hold  up to  255(0XFF).</p>
<p align="center"><strong><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image5.jpg"><img class="aligncenter size-full wp-image-154" title="Image5" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image5.jpg" width="482" height="57" /></a></strong></p>
<p><strong>Output Compare Register (OCR0)</strong> <strong>            </strong></p>
<p>The content of the register is continuously compared with TCNT0 content, if both are equal it can be used to generate compare match interrupt  to occurs or waveform generation.</p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image6.jpg"><img class="aligncenter size-full wp-image-155" title="Image6" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image6.jpg" width="491" height="74" /></a></p>
<p><strong>Timer Counter Control Register (TCCR0)</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.jpg"><img class="aligncenter size-full wp-image-156" title="Image4" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.jpg" width="488" height="50" /></a></p>
<p><strong>FOC0: </strong>This bit is used while wave generation when written one to this bit when compare match is occurred.</p>
<p><strong>WGM0 1:0:</strong>Timer 0 Mode selecting bits.</p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.1.jpg"><img class="aligncenter size-full wp-image-157" title="Image4.1" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.1.jpg" width="360" height="111" /></a></p>
<p><strong>COM0 1:0:</strong>This bit controls the OC0 pin operation during CTC, PWM phase correct and Fast PWM modes.</p>
<p align="center"><strong>Compare Match Mode</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.2.jpg"><img class="aligncenter size-full wp-image-158" title="Image4.2" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.2.jpg" width="365" height="119" /></a><strong> </strong><strong>Fast PWM Mode</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.3.jpg"><img class="aligncenter size-full wp-image-159" title="Image4.3" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.3.jpg" width="408" height="118" /></a></p>
<p align="center"><strong>PWM Phase Correct Mode</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.4.jpg"><img class="aligncenter size-full wp-image-160" title="Image4.4" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.4.jpg" width="405" height="197" /></a></p>
<p><strong>CS0 2:0: </strong>These three bits are used to select the clock source</p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.5.jpg"><img class="aligncenter size-full wp-image-161" title="Image4.5" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image4.5.jpg" width="630" height="254" /></a></p>
<p><strong>Timer/Counter Interrupt Flag Register (TIFR)</strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image8.jpg"><img class="aligncenter size-full wp-image-162" title="Image8" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image8.jpg" width="492" height="56" /></a></p>
<p><strong>TOV0: </strong>This bits is set when overflow occurs in TCNT0 (i.e. when TCNT0 is incremented from 0XFF it becomes 0X100)</p>
<p><strong>OCF0:</strong>This bit is set when the Content of TCNT0 and OCR0 are equal. <strong> </strong></p>
<p><strong>Timer/Counter Interrupt Mask Register (TIMSK)       </strong></p>
<p align="center"><a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image7.jpg"><img class="aligncenter size-full wp-image-163" title="Image7" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Image7.jpg" width="482" height="54" /></a></p>
<p><strong>TOIE0:</strong> By writing one to this bit enables Timer/Counter Overflow 0 interrupt if global interrupt is enabled.</p>
<p><strong>OCIE0: </strong>By writing one to this bit enables Timer/Counter CompareMatch 0 interrupt if global interrupt is enabled.</p>
<p><strong>Procedure for Generating Time delay</strong></p>
<p>First calculate the time for interrupt to occurs is</p>
<p>Time = (1 / Fosc) * TCNT0 value * Prescalar.</p>
<ul>
<li><strong>Enable global interrupt (i.e. # asm (“sei”)).</strong></li>
<li><strong>Select normal mode and the Prescalar for the timer clock in TCCR0</strong></li>
<li><strong>Enable the Timer/Counter0 Overflow in TIMSK Register</strong></li>
<li><strong>Load the value to TCNT0.</strong></li>
<li><strong>Write the operation what we want to do when interrupt occurs in the ISR function</strong></li>
</ul>
<p><strong> **Note</strong> For writing an Interrupt Service Routine function, the function must begin with a keyword interrupt followed by the vector address with in the square bracket followed by the name of function with prototype.</p>
<p><strong>interrupt [Vector address] Return type fn_name (Arguments)</strong></p>
<p><strong>{</strong></p>
<p>place the code</p>
<p><strong>}</strong></p>
<p><strong> </strong>Vector address can be found in the micro-controller pdf or in the compilers header file <strong> </strong></p>
<p><strong>Program</strong><strong>   </strong></p>
<p><strong>Write a program to toggle the pin PB0 for every one second approximately.</strong></p>
<p>Time = (1/1000000)*255*1024</p>
<p>=.26112 sec</p>
<p>= 261 msec     time taken for each interrupt to occur. If the interrupt happens for 4 times it’s nearly equal to 1 sec.</p>
<p><strong>Code</strong> <a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Program.jpg"><img class="aligncenter size-full wp-image-164" title="Program" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/Program.jpg" width="623" height="454" /></a><strong>Circuit diagram:</strong> <a href="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/circuit.jpg"><img class="aligncenter size-full wp-image-165" title="circuit" alt="" src="http://www.embeddedtutorials.com/wp-content/uploads/2012/12/circuit.jpg" width="396" height="360" /></a><strong>Downloads:</strong></p>
<p><a title="Timer/counter Pdf" href="http://embeddedtutorials.com/download/TIMER%20PROGRAMING%20OF%20ATMEGA32.pdf" target="_blank"><strong>Click Here to download pdf</strong></a></p>
<p>&nbsp;</p>
											</div><!-- .entry-content -->


					<div class="entry-utility">
						This entry was posted in <a href="http://www.embeddedtutorials.com/embedded/atmega-32/" title="View all posts in ATmega 32" rel="category tag">ATmega 32</a> and tagged <a href="http://www.embeddedtutorials.com/tag/countdown-timer-in-avr-microcontrollers/" rel="tag">Countdown timer in AVR Microcontrollers</a>, <a href="http://www.embeddedtutorials.com/tag/counters-in-avr-microcontrollers/" rel="tag">Counters in AVR Microcontrollers</a>, <a href="http://www.embeddedtutorials.com/tag/counters-in-microcontrollers/" rel="tag">Counters in Microcontrollers</a>, <a href="http://www.embeddedtutorials.com/tag/timercounter-progarmming-in-avr-microcontrollers/" rel="tag">Timer/Counter Progarmming in AVR Microcontrollers</a>, <a href="http://www.embeddedtutorials.com/tag/timers-in-avr-microcontrollers/" rel="tag">Timers in AVR Microcontrollers</a>, <a href="http://www.embeddedtutorials.com/tag/timers-in-microcontrollers/" rel="tag">Timers in Microcontrollers</a>. Bookmark the <a href="http://www.embeddedtutorials.com/150/" title="Permalink to Timer/Counter" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.embeddedtutorials.com/io-port-programming/" rel="prev"><span class="meta-nav">&larr;</span> I/O Port Programming in ATMega32</a></div>
					<div class="nav-next"><a href="http://www.embeddedtutorials.com/two-wire-interface/" rel="next">Two Wire Interface <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">



								<div id="respond">
				<h3 id="reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/150/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.embeddedtutorials.com/wp-comments-post.php" method="post" id="commentform">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='150' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
											</form>
							</div><!-- #respond -->
						
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-2" class="widget-container widget_search"><form role="search" method="get" id="searchform" action="http://www.embeddedtutorials.com/" >
	<div><label class="screen-reader-text" for="s">Search for:</label>
	<input type="text" value="" name="s" id="s" />
	<input type="submit" id="searchsubmit" value="Search" />
	</div>
	</form></li>		<li id="recent-posts-3" class="widget-container widget_recent_entries">		<h3 class="widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href="http://www.embeddedtutorials.com/lpc2148externalinterrupt/" title="External Interrupt">External Interrupt</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/lpc21248timercounter/" title="Timer/Counter">Timer/Counter</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/adc_lpc/" title="ADC">ADC</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/lpc-rtc/" title="Internal RTC">Internal RTC</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/lpc-i2c/" title="I2C">I2C</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/lpc2148-tutorials/" title="GPIO Programing">GPIO Programing</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/lcd-interfacing-with-atmega32/" title="LCD interfacing with ATMega32">LCD interfacing with ATMega32</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/eeprom-programming-in-atmega32/" title="EEPROM Programming in ATMega32">EEPROM Programming in ATMega32</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/usart-programming-in-pic18f458/" title="USART Programming in PIC18F458">USART Programming in PIC18F458</a>
						</li>
					<li>
				<a href="http://www.embeddedtutorials.com/eeprom-programming-for-pic18f458-2/" title="EEPROM Programming for PIC18F458">EEPROM Programming for PIC18F458</a>
						</li>
				</ul>
		</li><li id="recent-comments-2" class="widget-container widget_recent_comments"><h3 class="widget-title">Recent Comments</h3><ul id="recentcomments"></ul></li><li id="categories-2" class="widget-container widget_categories"><h3 class="widget-title">Categories</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="1">ADC</option>
	<option class="level-0" value="121">ADC</option>
	<option class="level-0" value="36">ARM Tutorials</option>
	<option class="level-0" value="13">ATmega 32</option>
	<option class="level-0" value="14">Communication</option>
	<option class="level-0" value="19">Communication Basics</option>
	<option class="level-0" value="27">EEPROM</option>
	<option class="level-0" value="12">Embedded</option>
	<option class="level-0" value="123">External Interrupt</option>
	<option class="level-0" value="21">Hardware Interrupt</option>
	<option class="level-0" value="18">I2C</option>
	<option class="level-0" value="119">I2C</option>
	<option class="level-0" value="120">Internal RTC</option>
	<option class="level-0" value="20">Interrupt</option>
	<option class="level-0" value="24">IO Port Programming</option>
	<option class="level-0" value="16">IO PORTS</option>
	<option class="level-0" value="28">LCD Interfacing</option>
	<option class="level-0" value="35">LPC2148</option>
	<option class="level-0" value="23">PIC 18F458</option>
	<option class="level-0" value="122">Timer/Counter</option>
	<option class="level-0" value="26">USART Programming in PIC18F458</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.embeddedtutorials.com/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li><li id="tag_cloud-2" class="widget-container widget_tag_cloud"><h3 class="widget-title">tags</h3><div class="tagcloud"><a href='http://www.embeddedtutorials.com/embedded/atmega-32/adc/' class='tag-link-1' title='3 topics' style='font-size: 22pt;'>ADC</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/adc-lpc2138-tutorials/' class='tag-link-121' title='1 topic' style='font-size: 8pt;'>ADC</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/' class='tag-link-36' title='1 topic' style='font-size: 8pt;'>ARM Tutorials</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/' class='tag-link-13' title='3 topics' style='font-size: 22pt;'>ATmega 32</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/communication/' class='tag-link-14' title='2 topics' style='font-size: 16.4pt;'>Communication</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/communication/communication-basics/' class='tag-link-19' title='1 topic' style='font-size: 8pt;'>Communication Basics</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/eeprom/' class='tag-link-27' title='1 topic' style='font-size: 8pt;'>EEPROM</a>
<a href='http://www.embeddedtutorials.com/embedded/' class='tag-link-12' title='3 topics' style='font-size: 22pt;'>Embedded</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/external-interrupt/' class='tag-link-123' title='1 topic' style='font-size: 8pt;'>External Interrupt</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/interrupt/hardware-interrupt/' class='tag-link-21' title='1 topic' style='font-size: 8pt;'>Hardware Interrupt</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/i2c-lpc2138-tutorials/' class='tag-link-119' title='1 topic' style='font-size: 8pt;'>I2C</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/communication/i2c-communication/' class='tag-link-18' title='1 topic' style='font-size: 8pt;'>I2C</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/internal-rtc/' class='tag-link-120' title='1 topic' style='font-size: 8pt;'>Internal RTC</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/interrupt/' class='tag-link-20' title='1 topic' style='font-size: 8pt;'>Interrupt</a>
<a href='http://www.embeddedtutorials.com/embedded/pic-18f458/io-port-programming/' class='tag-link-24' title='1 topic' style='font-size: 8pt;'>IO Port Programming</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/io-ports/' class='tag-link-16' title='1 topic' style='font-size: 8pt;'>IO PORTS</a>
<a href='http://www.embeddedtutorials.com/embedded/atmega-32/lcd-interfacing/' class='tag-link-28' title='1 topic' style='font-size: 8pt;'>LCD Interfacing</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2148/' class='tag-link-35' title='1 topic' style='font-size: 8pt;'>LPC2148</a>
<a href='http://www.embeddedtutorials.com/embedded/pic-18f458/' class='tag-link-23' title='2 topics' style='font-size: 16.4pt;'>PIC 18F458</a>
<a href='http://www.embeddedtutorials.com/embedded/lpc2138-tutorials/timercounter/' class='tag-link-122' title='1 topic' style='font-size: 8pt;'>Timer/Counter</a>
<a href='http://www.embeddedtutorials.com/embedded/pic-18f458/usart-programming-in-pic18f458/' class='tag-link-26' title='1 topic' style='font-size: 8pt;'>USART Programming in PIC18F458</a></div>
</li><li id="text-2" class="widget-container widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "ca-pub-8959552383574706";
/* side widget */
google_ad_slot = "6268923473";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
		</li>			</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.embeddedtutorials.com/" title="EmbeddedTutorials.com" rel="home">
					EmbeddedTutorials.com				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress.</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

	<!-- Start of StatCounter Code -->
	<script type="text/javascript">
	<!-- 
		var sc_project=8527354; 
		var sc_security="38171db4"; 
	//-->
	</script>
	<script type="text/javascript" src="http://www.statcounter.com/counter/counter_xhtml.js"></script>
<noscript><div class="statcounter"><a title="web analytics" href="http://statcounter.com/"><img class="statcounter" src="http://c.statcounter.com/8527354/0/38171db4/0/" alt="web analytics" /></a></div></noscript>	
	<!-- End of StatCounter Code -->
</body>
</html>
